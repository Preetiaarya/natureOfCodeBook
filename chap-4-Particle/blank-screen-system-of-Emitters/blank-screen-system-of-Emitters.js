let emitters = []; // Array to store multiple emitters

function setup() {
    createCanvas(800, 400); // Set up a canvas of 800x400 pixels
}
function draw() {
    background(220); // Clear the screen with a light gray background

    // Loop through each emitter in the array and update it
    for (let emitter of emitters) {
        emitter.run();       // Update existing particles and remove dead ones
        emitter.addParticle(); // Continuously add new particles from the emitter
    }
}
function mousePressed() {
    // When the mouse is clicked, create a new emitter at the mouse position
    emitters.push(new Emitter(mouseX, mouseY)); // Add new emitter to the array
}

class Emitter {
    constructor(x, y) {
        this.origin = createVector(x, y); // Store the emitter's position as a vector
        this.particles = []; // Array to store particles generated by this emitter
    }

    addParticle() {
        // Create a new particle at the emitter's position and add it to the array
        this.particles.push(new Particle(this.origin.x, this.origin.y));
    }

    run() {
        // Looping through the particle array in reverse order
        // This prevents issues when removing elements from an array
        for (let i = this.particles.length - 1; i >= 0; i--) {
            this.particles[i].run(); // Update particle behavior
            
            if (this.particles[i].isDead()) { // Check if the particle should be removed
                this.particles.splice(i, 1); // Remove the particle from the array
            }
        }
    }
}
