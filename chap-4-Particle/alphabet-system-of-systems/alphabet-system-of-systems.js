let emitters = []; // Store multiple emitters

function setup() {
    createCanvas(800, 400); // Create a canvas of 800x400 pixels
    textSize(24); // Set text size for letters
}
function draw() {
    background(204, 255, 229); // Set a light greenish background

    // Loop through each emitter and update it
    for (let emitter of emitters) {
        emitter.run();       // Update existing particles and remove dead ones
        emitter.addParticle(); // Continuously generate new letter particles
    }
}
function mousePressed() {
    // When the mouse is clicked, create a new emitter at the mouse position
    emitters.push(new Emitter(mouseX, mouseY)); 
}

// Emitter class to spawn particles
class Emitter {
    constructor(x, y) {
        this.origin = createVector(x, y); // Store emitter's position as a vector
        this.particles = []; // Array to store particles generated by this emitter
    }

    addParticle() {
        // Create a new letter particle at the emitter's position and add it to the array
        this.particles.push(new Particle(this.origin.x, this.origin.y));
    }

    run() {
        // Looping through the particle array in reverse order
        // This prevents issues when removing elements from an array
        for (let i = this.particles.length - 1; i >= 0; i--) {
            this.particles[i].update(); // Move and update particle properties
            this.particles[i].display(); // Render the letter particle
            
            if (this.particles[i].isDead()) { // Check if the particle has faded away
                this.particles.splice(i, 1); // Remove it from the array
            }
        }
    }
}
// Particle class representing a moving letter
class Particle {
    constructor(x, y) {
        this.position = createVector(x, y); // Store initial position
        this.velocity = createVector(random(-2, 2), random(-2, 2)); // Random movement direction
        this.lifespan = 255; // Alpha value for fading effect

        // BUG FIX: Provide a set of characters to randomly choose from
        this.letter = random("ABCDEFGHIJKLMNOPQRSTUVWXYZ"); // Randomly choose a letter
    }

    update() {
        this.position.add(this.velocity); // Move the particle
        this.lifespan -= 1; // Reduce lifespan to create a fading effect
    }

    display() {
        // Set a random color for each letter with fading transparency
        fill(random(255), random(255), random(255), this.lifespan);
        text(this.letter, this.position.x, this.position.y); // Draw the letter at the current position
    }

    isDead() {
        return this.lifespan <= 0; // If lifespan reaches 0, the particle should be removed
    }
}
